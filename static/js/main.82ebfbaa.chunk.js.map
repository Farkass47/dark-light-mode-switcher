{"version":3,"sources":["Containers/DarkModeSwitcher/DarkModeSwitcher.tsx","Components/DarkModeIcon/DarkModeIcon.tsx","Components/DarkModeSwitch/DarkModeSwitch.tsx","App.js","reportWebVitals.js","index.js"],"names":["LighDarkModes","DarkModeIcon","mode","className","LIGHT","icon","sunIcon","bxsMoon","DarkModeSwitch","toggleDarkMode","type","onClick","DarkModeSwitcher","useState","darkMode","setDarkMode","DARK","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAOYA,E,mFCGCC,EAAe,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAC1B,OACI,uBAAMC,UAAU,cAAhB,UACI,uBAAMA,UAAS,sBAAiBD,IAASF,EAAcI,MAAQ,OAAS,SAAxE,UACKF,IAASF,EAAcI,MAAQ,QAAU,OAD9C,WAGA,cAAC,OAAD,CACID,UAAS,oBAAeD,IAASF,EAAcI,MAAQ,MAAQ,QAC/DC,KAAMH,IAASF,EAAcI,MAAQE,IAAUC,UCZlDC,G,MAAiB,SAAC,GAAiD,EAAhDN,KAAiD,IAA3CO,EAA0C,EAA1CA,eAClC,OACI,wBAAON,UAAU,eAAjB,UACI,uBAAOO,KAAK,WAAYC,QAASF,IACjC,qBAAKN,UAAU,sB,gBFHfH,O,iBAAAA,I,gBAAAA,M,KAUL,IAAMY,EAAmB,SAAC,GAAiC,IAAhCV,EAA+B,EAA/BA,KAC9B,EAAgCW,mBAASX,GAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KAKA,OACI,sBAAKZ,UAAU,uBAAf,UACI,cAAC,EAAD,CAAcD,KAAMY,IACpB,cAAC,EAAD,CAAgBZ,KAAMY,EAAUL,eANjB,WACnBM,EAAYD,EAAWd,EAAcI,MAAQJ,EAAcgB,a,MGTpDC,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,CAAkBA,UAAU,0BAA0BD,KAAMF,EAAcI,WCKjEc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82ebfbaa.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nimport { DarkModeIcon } from '../../Components/DarkModeIcon/DarkModeIcon'\r\nimport { DarkModeSwitch } from '../../Components/DarkModeSwitch/DarkModeSwitch'\r\n\r\nimport './DarkModeSwitcher.css'\r\n\r\nexport enum LighDarkModes {\r\n    LIGHT,\r\n    DARK\r\n}\r\n\r\nexport interface DarkModeSwitchProps {\r\n    mode: LighDarkModes;\r\n    toggleDarkMode?: ()=>void;\r\n}\r\n\r\nexport const DarkModeSwitcher = ({mode}: DarkModeSwitchProps) => {\r\n    const [darkMode, setDarkMode] = useState(mode)\r\n\r\n    const toggleDarkMode = () => {\r\n        setDarkMode(darkMode ? LighDarkModes.LIGHT : LighDarkModes.DARK)        \r\n    }\r\n    return (\r\n        <div className=\"theme-switch-wrapper\">\r\n            <DarkModeIcon mode={darkMode} />\r\n            <DarkModeSwitch mode={darkMode} toggleDarkMode={toggleDarkMode} />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport sunIcon from '@iconify-icons/fa-solid/sun';\r\nimport bxsMoon from '@iconify-icons/bx/bxs-moon';\r\n\r\nimport {LighDarkModes, DarkModeSwitchProps } from '../../Containers/DarkModeSwitcher/DarkModeSwitcher';\r\n\r\nimport './DarkModeIcon.css'\r\n\r\nexport const DarkModeIcon = ({mode}: DarkModeSwitchProps) => {\r\n    return (\r\n        <span className=\"toggle-icon\">\r\n            <span className={`toggle-text ${mode === LighDarkModes.LIGHT ? \"dark\" : \"light\"}`}>\r\n                {mode === LighDarkModes.LIGHT ? \"Light\" : \"Dark\"} Mode\r\n            </span>\r\n            <Icon \r\n                className={`mode-icon ${mode === LighDarkModes.LIGHT ? \"sun\" : \"moon\"}`} \r\n                icon={mode === LighDarkModes.LIGHT ? sunIcon : bxsMoon} \r\n            /> \r\n        </span>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { DarkModeSwitchProps } from '../../Containers/DarkModeSwitcher/DarkModeSwitcher';\r\n\r\nimport './DarkModeSwitch.css'\r\n\r\nexport const DarkModeSwitch = ({mode, toggleDarkMode}: DarkModeSwitchProps ) => {    \r\n    return (        \r\n        <label className=\"theme-switch\">\r\n            <input type=\"checkbox\"  onClick={toggleDarkMode} />\r\n            <div className=\"slider round\"></div>            \r\n        </label>\r\n    )\r\n}\r\n","import { DarkModeSwitcher, LighDarkModes } from './Containers/DarkModeSwitcher/DarkModeSwitcher'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DarkModeSwitcher className=\"mode-switcher-component\" mode={LighDarkModes.LIGHT} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}